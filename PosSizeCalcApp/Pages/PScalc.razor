@page "/pscalc"

<PageTitle>pscalc</PageTitle>

<h1>Calculator</h1>



<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add / Edit data</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudNumericField @bind-Value="data.AccountSize" Label="Account Size" Variant="Variant.Text" ></MudNumericField>
        <MudNumericField @bind-Value="data.AssetPrice" Label="Asset Price" Variant="Variant.Text"  ></MudNumericField>
        <MudNumericField @bind-Value="data.Risk" Label="Risk" Variant="Variant.Text"   ></MudNumericField>
        <MudNumericField @bind-Value="data.Stoploss" Label="Stoploss" Variant="Variant.Text"  ></MudNumericField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save data</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Elevation="25" Items="GetData()"  @bind-Value="data">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Data</MudText>
        <MudSpacer />
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Account Size</MudTh>
        <MudTh>Asset Price</MudTh>
        <MudTh>Risk</MudTh>
        <MudTh>Stoploss</MudTh>
        <MudTh>PosSizeDollar</MudTh>
        <MudTh>AssetAmount</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="AccountSize">@context.AccountSize</MudTd>
        <MudTd DataLabel="AssetPrice">@context.AssetPrice</MudTd>
        <MudTd DataLabel="Risk">@context.Risk</MudTd>
        <MudTd DataLabel="Stoploss">@context.Stoploss</MudTd>

        <MudTd DataLabel="Pos Size Dollar">@context.PosSizeDollar</MudTd>
        <MudTd DataLabel="Asset Amount">@context.AssetAmount</MudTd>
       
    </RowTemplate>
</MudTable>

@code{
    public decimal DecimalValue { get; set; }

    public string searchString = "";
    public Data data = new Data();
    public List<Data> dataList = new List<Data>();
    protected override async Task OnInitializedAsync()
    {
        GetData();
    }


    public List<Data> GetData()
    {
        if (data != null)
        {
            return dataList;
        }
        else
        {
            return new List<Data>();
        }

    }

    public void Save()
    {
        dataList.Add(data);

        GetData();
    }


    public class Data
    {
        public double AccountSize { get; set; }
        public double AssetPrice { get; set; }
        public double Stoploss { get; set; }
        public double Risk { get; set; }

        public double PosSizeDollar { get { return AccountSize * Stoploss / Risk; } set { } }
        public double AssetAmount { get { return PosSizeDollar / AssetPrice; } set { } }
    }
}

